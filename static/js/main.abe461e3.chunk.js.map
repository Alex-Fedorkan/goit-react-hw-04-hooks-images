{"version":3,"sources":["components/ImageGallery/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.js","services/pixabay-api.js","components/Loader/Loader.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/SearchResults/SearchResults.js","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","onSubmit","useState","searchQuery","setSearchQuery","className","s","header","form","event","preventDefault","trim","toast","error","type","button","label","input","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","ImagesApiService","this","page","url","fetch","then","response","ok","json","Promise","reject","Error","newQuery","newNum","CustomLoader","color","height","width","style","marginLeft","marginRight","ImageGalleryItem","webformatURL","largeImageURL","alt","onClick","item","src","image","data-src","ImageGallery","images","list","map","id","tags","Button","btn","modalRoot","document","querySelector","Modal","imgURL","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","overlay","target","modal","imagesApiService","Status","SearchResults","setImages","setError","status","setStatus","setLargeImageURL","setAlt","loaderStatus","setLoaderStatus","resetPage","query","fetchImages","total","hits","catch","length","message","dataset","pageNum","state","finally","scrollTo","top","documentElement","scrollHeight","behavior","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.abe461e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ImageGalleryItem_item__3qhMI\",\"image\":\"ImageGalleryItem_image__24eJV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__1diO_\",\"modal\":\"Modal_modal__gG3BE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ImageGallery_list__1Gp_5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__1L8Kq\"};","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\nimport s from './Searchbar.module.css';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleQueryChange = event => {\n    setSearchQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      toast.error('Enter your query');\n      onSubmit(searchQuery);\n\n      return;\n    }\n\n    onSubmit(searchQuery);\n  };\n\n  return (\n    <header className={s.header}>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={s.button}>\n          <span className={s.label}>Search</span>\n        </button>\n\n        <input\n          className={s.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={searchQuery}\n          onChange={handleQueryChange}\n        />\n      </form>\n    </header>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","const API_KEY = '19016514-f636b8f63ee9a8d1bcb803743';\nconst BASE_URL = 'https://pixabay.com/api/';\n// const CORS = 'https://cors-anywhere.herokuapp.com/';\n\nexport default class ImagesApiService {\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n  }\n\n  fetchImages() {\n    const url = `${BASE_URL}?q=${this.searchQuery}&page=${this.page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n\n    return fetch(url).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      return Promise.reject(new Error('Bad request!'));\n    });\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n\n  get pageNum() {\n    return this.page;\n  }\n\n  set pageNum(newNum) {\n    this.page = newNum;\n  }\n}\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst CustomLoader = () => {\n  return (\n    <Loader\n      type=\"Hearts\"\n      color=\"#00BFFF\"\n      height={80}\n      width={80}\n      style={{ marginLeft: 'auto', marginRight: 'auto' }}\n    />\n  );\n};\n\nexport default CustomLoader;\n","import PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ webformatURL, largeImageURL, alt, onClick }) => {\n  return (\n    <li className={s.item}>\n      <img\n        src={webformatURL}\n        alt={alt}\n        className={s.image}\n        data-src={largeImageURL}\n        onClick={onClick}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport s from './ImageGallery.module.css';\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\n\nconst ImageGallery = ({ images, onClick }) => {\n  return (\n    <ul className={s.list}>\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => {\n        return (\n          <ImageGalleryItem\n            key={id}\n            webformatURL={webformatURL}\n            largeImageURL={largeImageURL}\n            alt={tags}\n            onClick={onClick}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.number.isRequired }),\n  ).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nconst Button = ({ onClick }) => {\n  return (\n    <button className={s.btn} type=\"button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ imgURL, alt, onClose }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleKeyDown = event => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={s.overlay} onClick={handleBackdropClick}>\n      <div className={s.modal}>\n        <img src={imgURL} alt={alt} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n};\n\nModal.propTypes = {\n  imgURL: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport ImagesApiService from '../../services/pixabay-api';\nimport CustomLoader from '../Loader/Loader';\nimport ImageGallery from '../ImageGallery/ImageGallery';\nimport Button from '../Button/Button';\nimport Modal from '../Modal/Modal';\n\nconst imagesApiService = new ImagesApiService();\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst SearchResults = ({ searchQuery }) => {\n  const [images, setImages] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [largeImageURL, setLargeImageURL] = useState(null);\n  const [alt, setAlt] = useState('');\n  const [loaderStatus, setLoaderStatus] = useState(false);\n\n  useEffect(() => {\n    if (searchQuery.trim() === '') {\n      return setStatus(Status.IDLE);\n    }\n\n    setImages([]);\n    setStatus(Status.PENDING);\n\n    imagesApiService.resetPage();\n    imagesApiService.query = searchQuery;\n\n    imagesApiService\n      .fetchImages()\n      .then(images => {\n        if (images.total) {\n          setStatus(Status.RESOLVED);\n          setImages(images.hits);\n        } else {\n          return Promise.reject(new Error(`No match found!`));\n        }\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  }, [searchQuery]);\n\n  const loadMoreClick = () => {\n    setLoaderStatus(true);\n\n    imagesApiService.pageNum += 1;\n\n    imagesApiService\n      .fetchImages()\n      .then(images => {\n        setImages(state => {\n          return [...state, ...images.hits];\n        });\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      })\n      .finally(() => {\n        setLoaderStatus(false);\n\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      });\n  };\n\n  const handleImageClick = event => {\n    setLargeImageURL(event.target.dataset.src);\n    setAlt(event.target.alt);\n  };\n\n  if (status === Status.IDLE) {\n    return null;\n  }\n\n  if (status === Status.PENDING && !images.length) {\n    return <CustomLoader />;\n  }\n\n  if (status === Status.REJECTED) {\n    toast.error(error.message);\n    return null;\n  }\n\n  if (status === Status.RESOLVED) {\n    return (\n      <>\n        <ImageGallery images={images} onClick={handleImageClick} />\n        {loaderStatus && <CustomLoader />}\n        <Button onClick={loadMoreClick} />\n        {largeImageURL && (\n          <Modal imgURL={largeImageURL} alt={alt} onClose={setLargeImageURL} />\n        )}\n      </>\n    );\n  }\n};\n\nSearchResults.propTypes = {\n  searchQuery: PropTypes.string.isRequired,\n};\n\nexport default SearchResults;\n","import { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport './App.css';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport SearchResults from './components/SearchResults/SearchResults';\n\nconst App = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={setSearchQuery} />\n      <SearchResults searchQuery={searchQuery} />\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Searchbar_header__yTmPX\",\"form\":\"Searchbar_form__1X2Cr\",\"button\":\"Searchbar_button__JaaD7\",\"label\":\"Searchbar_label__2PYQu\",\"input\":\"Searchbar_input__1xwnh\"};"],"sourceRoot":""}